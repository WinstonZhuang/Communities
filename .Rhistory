if (data2018[i,5] %in% Bronx) {
data2018[i,9] <- "Bronx"
data2018[i,10] <- 1479458
}
else if (data2018[i,5] %in% Brooklyn) {
data2018[i,9] <- "Brooklyn"
data2018[i,10] <- 2582830
}
else if (data2018[i,5] %in% Manhattan) {
data2018[i,9] <- "Manhattan"
data2018[i,10] <- 1628701
}
else if (data2018[i,5] %in% Queens) {
data2018[i,9] <- "Queens"
data2018[i,10] <- 2278906
}
else if (data2018[i,5] %in% StatenIsland) {
data2018[i,9] <- "Staten Island"
data2018[i,10] <- 476179
}
}
for (i in 1:nrow(data2019)) {
if (data2019[i,5] %in% Bronx) {
data2019[i,9] <- "Bronx"
data2019[i,10] <- 1472654
}
else if (data2019[i,5] %in% Brooklyn) {
data2019[i,9] <- "Brooklyn"
data2019[i,10] <- 2559903
}
else if (data2019[i,5] %in% Manhattan) {
data2019[i,9] <- "Manhattan"
data2019[i,10] <- 1628706
}
else if (data2019[i,5] %in% Queens) {
data2019[i,9] <- "Queens"
data2019[i,10] <- 2253858
}
else if (data2019[i,5] %in% StatenIsland) {
data2019[i,9] <- "Staten Island"
data2019[i,10] <- 474558
}
}
for (i in 1:nrow(data2020)) {
if (data2020[i,5] %in% Bronx) {
data2020[i,9] <- "Bronx"
data2020[i,10] <- 1471160
}
else if (data2020[i,5] %in% Brooklyn) {
data2020[i,9] <- "Brooklyn"
data2020[i,10] <- 2559903
}
else if (data2020[i,5] %in% Manhattan) {
data2020[i,9] <- "Manhattan"
data2020[i,10] <- 1628701
}
else if (data2020[i,5] %in% Queens) {
data2020[i,9] <- "Queens"
data2020[i,10] <- 2253858
}
else if (data2020[i,5] %in% StatenIsland) {
data2020[i,9] <- "Staten Island"
data2020[i,10] <- 474558
}
}
for (i in 1:nrow(data2021)) {
if (data2021[i,5] %in% Bronx) {
data2021[i,9] <- "Bronx"
data2021[i,10] <- 1468823
}
else if (data2021[i,5] %in% Brooklyn) {
data2021[i,9] <- "Brooklyn"
data2021[i,10] <- 2559903
}
else if (data2021[i,5] %in% Manhattan) {
data2021[i,9] <- "Manhattan"
data2021[i,10] <- 1628701
}
else if (data2021[i,5] %in% Queens) {
data2021[i,9] <- "Queens"
data2021[i,10] <- 2253858
}
else if (data2021[i,5] %in% StatenIsland) {
data2021[i,9] <- "Staten Island"
data2021[i,10] <- 474558
}
}
data2014 <- subset(data2014, !is.na(data2014$Borough))
data2015 <- subset(data2015, !is.na(data2015$Borough))
data2016 <- subset(data2016, !is.na(data2016$Borough))
data2017 <- subset(data2017, !is.na(data2017$Borough))
data2018 <- subset(data2018, !is.na(data2018$Borough))
data2019 <- subset(data2019, !is.na(data2019$Borough))
data2020 <- subset(data2020, !is.na(data2020$Borough))
data2021 <- subset(data2021, !is.na(data2021$Borough))
data2014 <- subset(data2014, !is.na(data2014$BreedName))
data2015 <- subset(data2015, !is.na(data2015$BreedName))
data2016 <- subset(data2016, !is.na(data2016$BreedName))
data2017 <- subset(data2017, !is.na(data2017$BreedName))
data2018 <- subset(data2018, !is.na(data2018$BreedName))
data2019 <- subset(data2019, !is.na(data2019$BreedName))
data2020 <- subset(data2020, !is.na(data2020$BreedName))
data2021 <- subset(data2021, !is.na(data2021$BreedName))
data2014 <- subset(data2014, !is.na(data2014$Borough))
data2015 <- subset(data2015, !is.na(data2015$Borough))
data2016 <- subset(data2016, !is.na(data2016$Borough))
data2017 <- subset(data2017, !is.na(data2017$Borough))
data2018 <- subset(data2018, !is.na(data2018$Borough))
data2019 <- subset(data2019, !is.na(data2019$Borough))
data2020 <- subset(data2020, !is.na(data2020$Borough))
data2021 <- subset(data2021, !is.na(data2021$Borough))
data2014 <- subset(data2014, !is.na(data2014$BreedName))
data2015 <- subset(data2015, !is.na(data2015$BreedName))
data2016 <- subset(data2016, !is.na(data2016$BreedName))
data2017 <- subset(data2017, !is.na(data2017$BreedName))
data2018 <- subset(data2018, !is.na(data2018$BreedName))
data2019 <- subset(data2019, !is.na(data2019$BreedName))
data2020 <- subset(data2020, !is.na(data2020$BreedName))
data2021 <- subset(data2021, !is.na(data2021$BreedName))
sample2014 <- data2014[sample(nrow(data2014),100),]
sample2015 <- data2015[sample(nrow(data2015),100),]
sample2016 <- data2016[sample(nrow(data2016),100),]
sample2017 <- data2017[sample(nrow(data2017),100),]
sample2018 <- data2018[sample(nrow(data2018),100),]
sample2019 <- data2019[sample(nrow(data2019),100),]
sample2020 <- data2020[sample(nrow(data2020),100),]
sample2021 <- data2021[sample(nrow(data2021),100),]
data2014latlon <- geocode(as.character(sample2014$ZipCode), output = "latlon")
sample2014 <- cbind(sample2014, data2014latlon)
nyc <- get_map(location = "new york city", zoom = 10)
ggmap(nyc) + geom_point(data = sample2014, aes(x = lon, y = lat, color = Borough), alpha = 0.5)
data2015latlon <- geocode(as.character(sample2015$ZipCode), output = "latlon")
sample2015 <- cbind(sample2015, data2015latlon)
data2016latlon <- geocode(as.character(sample2016$ZipCode), output = "latlon")
sample2016 <- cbind(sample2016, data2016latlon)
data2017latlon <- geocode(as.character(sample2017$ZipCode), output = "latlon")
sample2017 <- cbind(sample2017, data2017latlon)
data2018latlon <- geocode(as.character(sample2018$ZipCode), output = "latlon")
sample2018 <- cbind(sample2018, data2018latlon)
data2019latlon <- geocode(as.character(sample2019$ZipCode), output = "latlon")
sample2019 <- cbind(sample2019, data2019latlon)
data2020latlon <- geocode(as.character(sample2020$ZipCode), output = "latlon")
sample2020 <- cbind(sample2020, data2020latlon)
data2021latlon <- geocode(as.character(sample2021$ZipCode), output = "latlon")
sample2021 <- cbind(sample2021, data2021latlon)
table2014 <- data2014 %>% group_by(Borough, BreedName) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
group_by(Borough) %>%
arrange(Borough, desc(n)) %>%
slice_head(n=10)
table2015 <- data2015 %>% group_by(Borough, BreedName) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
group_by(Borough) %>%
arrange(Borough, desc(n)) %>%
slice_head(n=10)
table2016 <- data2016 %>% group_by(Borough, BreedName) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
group_by(Borough) %>%
arrange(Borough, desc(n)) %>%
slice_head(n=10)
table2017 <- data2017 %>% group_by(Borough, BreedName) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
group_by(Borough) %>%
arrange(Borough, desc(n)) %>%
slice_head(n=10)
table2018 <- data2018 %>% group_by(Borough, BreedName) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
group_by(Borough) %>%
arrange(Borough, desc(n)) %>%
slice_head(n=10)
table2019 <- data2019 %>% group_by(Borough, BreedName) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
group_by(Borough) %>%
arrange(Borough, desc(n)) %>%
slice_head(n=10)
table2020 <- data2020 %>% group_by(Borough, BreedName) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
group_by(Borough) %>%
arrange(Borough, desc(n)) %>%
slice_head(n=10)
table2021 <- data2021 %>% group_by(Borough, BreedName) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
group_by(Borough) %>%
arrange(Borough, desc(n)) %>%
slice_head(n=10)
write.csv(data2014, "data2014.csv", row.names = FALSE)
write.csv(data2015, "data2015.csv", row.names = FALSE)
write.csv(data2016, "data2016.csv", row.names = FALSE)
write.csv(data2017, "data2017.csv", row.names = FALSE)
write.csv(data2018, "data2018.csv", row.names = FALSE)
write.csv(data2019, "data2019.csv", row.names = FALSE)
write.csv(data2020, "data2020.csv", row.names = FALSE)
write.csv(data2021, "data2021.csv", row.names = FALSE)
write.csv(sample2014, "sample2014.csv", row.names = FALSE)
write.csv(sample2015, "sample2015.csv", row.names = FALSE)
write.csv(sample2016, "sample2016.csv", row.names = FALSE)
write.csv(sample2017, "sample2017.csv", row.names = FALSE)
write.csv(sample2018, "sample2018.csv", row.names = FALSE)
write.csv(sample2019, "sample2019.csv", row.names = FALSE)
write.csv(sample2020, "sample2020.csv", row.names = FALSE)
write.csv(sample2021, "sample2021.csv", row.names = FALSE)
write.csv(table2014, "table2014.csv", row.names = FALSE)
write.csv(table2015, "table2015.csv", row.names = FALSE)
write.csv(table2016, "table2016.csv", row.names = FALSE)
write.csv(table2017, "table2017.csv", row.names = FALSE)
write.csv(table2018, "table2018.csv", row.names = FALSE)
write.csv(table2019, "table2019.csv", row.names = FALSE)
write.csv(table2020, "table2020.csv", row.names = FALSE)
write.csv(table2021, "table2021.csv", row.names = FALSE)
library(ggmap)
library(ggrepel)
library(dplyr)
library(ggplot2)
library(shiny)
library(klaR)
register_google(key = "AIzaSyAHpitChR5Mzw1DOKrnzm007XKBcQImHYs")
citation("ggmap")
data <- read.csv("NYC_Dog_Licensing_Dataset.csv")
data2014 <- read.csv("data2014.csv")
data2015 <- read.csv("data2015.csv")
data2016 <- read.csv("data2016.csv")
data2017 <- read.csv("data2017.csv")
data2018 <- read.csv("data2018.csv")
data2019 <- read.csv("data2019.csv")
data2020 <- read.csv("data2020.csv")
data2021 <- read.csv("data2021.csv")
sample2014 <- read.csv("sample2014.csv")
sample2015 <- read.csv("sample2015.csv")
sample2016 <- read.csv("sample2016.csv")
sample2017 <- read.csv("sample2017.csv")
sample2018 <- read.csv("sample2018.csv")
sample2019 <- read.csv("sample2019.csv")
sample2020 <- read.csv("sample2020.csv")
sample2021 <- read.csv("sample2021.csv")
table2014 <- read.csv("table2014.csv")
table2015 <- read.csv("table2015.csv")
table2016 <- read.csv("table2016.csv")
table2017 <- read.csv("table2017.csv")
table2018 <- read.csv("table2018.csv")
table2019 <- read.csv("table2019.csv")
table2020 <- read.csv("table2020.csv")
table2021 <- read.csv("table2021.csv")
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
sliderInput("year", "Select a year:", min = 2014, max = 2021, value = 2014, step = 1),
),
mainPanel(
tabsetPanel(
tabPanel("Map of NYC",
plotOutput("newyorkcity")
),
tabPanel("Issued Dog Licenses by Borough",
selectInput("type", "Select a Data Type:",
choices = c("Raw", "Proportional")),
plotOutput("borough")
),
tabPanel("Most Popular Issued Dogs",
selectInput("borough_select", "Select a Borough:",
choice = c("All", "Bronx",
"Brooklyn",
"Manhattan",
"Staten Island",
"Queens")),
selectInput("data_type", "Select a Data Type:",
choices = c("Raw", "Proportional")),
plotOutput("popular")
),
tabPanel("Chi-Squared Test",
selectInput("breeds", "Select a Dog Breed:",
choices = NULL),
actionButton("chi", "Start Chi-Squared"),
verbatimTextOutput("chiResult")
)
)
)
)
)
server <- function(input, output, session) {
newyorkcity <- reactive({
if (input$year == "2014") {
return (sample2014)
} else if (input$year == "2015") {
return (sample2015)
} else if (input$year == "2016") {
return (sample2016)
} else if (input$year == "2017") {
return (sample2017)
} else if (input$year == "2018") {
return (sample2018)
} else if (input$year == "2019") {
return (sample2019)
} else if (input$year == "2020") {
return (sample2020)
} else if (input$year == "2021") {
return (sample2021)
}
})
borough <- reactive({
if (input$year == "2014") {
return (data2014)
} else if (input$year == "2015") {
return (data2015)
} else if (input$year == "2016") {
return (data2016)
} else if (input$year == "2017") {
return (data2017)
} else if (input$year == "2018") {
return (data2018)
} else if (input$year == "2019") {
return (data2019)
} else if (input$year == "2020") {
return (data2020)
} else if (input$year == "2021") {
return (data2021)
}
})
popular <- reactive({
if (input$borough_select == "All") {
if (input$year == "2014") {
return (table2014)
} else if (input$year == "2015") {
return (table2015)
} else if (input$year == "2016") {
return (table2016)
} else if (input$year == "2017") {
return (table2017)
} else if (input$year == "2018") {
return (table2018)
} else if (input$year == "2019") {
return (table2019)
} else if (input$year == "2020") {
return (table2020)
} else if (input$year == "2021") {
return (table2021)
}
} else if (input$borough_select == "Bronx") {
if (input$year == "2014") {
return (table2014 %>% filter(Borough == "Bronx"))
} else if (input$year == "2015") {
return (table2015 %>% filter(Borough == "Bronx"))
} else if (input$year == "2016") {
return (table2016 %>% filter(Borough == "Bronx"))
} else if (input$year == "2017") {
return (table2017 %>% filter(Borough == "Bronx"))
} else if (input$year == "2018") {
return (table2018 %>% filter(Borough == "Bronx"))
} else if (input$year == "2019") {
return (table2019 %>% filter(Borough == "Bronx"))
} else if (input$year == "2020") {
return (table2020 %>% filter(Borough == "Bronx"))
} else if (input$year == "2021") {
return (table2021 %>% filter(Borough == "Bronx"))
}
} else if (input$borough_select == "Brooklyn") {
if (input$year == "2014") {
return (table2014 %>% filter(Borough == "Brooklyn"))
} else if (input$year == "2015") {
return (table2015 %>% filter(Borough == "Brooklyn"))
} else if (input$year == "2016") {
return (table2016 %>% filter(Borough == "Brooklyn"))
} else if (input$year == "2017") {
return (table2017 %>% filter(Borough == "Brooklyn"))
} else if (input$year == "2018") {
return (table2018 %>% filter(Borough == "Brooklyn"))
} else if (input$year == "2019") {
return (table2019 %>% filter(Borough == "Brooklyn"))
} else if (input$year == "2020") {
return (table2020 %>% filter(Borough == "Brooklyn"))
} else if (input$year == "2021") {
return (table2021 %>% filter(Borough == "Brooklyn"))
}
} else if (input$borough_select == "Manhattan") {
if (input$year == "2014") {
return (table2014 %>% filter(Borough == "Manhattan"))
} else if (input$year == "2015") {
return (table2015 %>% filter(Borough == "Manhattan"))
} else if (input$year == "2016") {
return (table2016 %>% filter(Borough == "Manhattan"))
} else if (input$year == "2017") {
return (table2017 %>% filter(Borough == "Manhattan"))
} else if (input$year == "2018") {
return (table2018 %>% filter(Borough == "Manhattan"))
} else if (input$year == "2019") {
return (table2019 %>% filter(Borough == "Manhattan"))
} else if (input$year == "2020") {
return (table2020 %>% filter(Borough == "Manhattan"))
} else if (input$year == "2021") {
return (table2021 %>% filter(Borough == "Manhattan"))
}
} else if (input$borough_select == "Staten Island") {
if (input$year == "2014") {
return (table2014 %>% filter(Borough == "Staten Island"))
} else if (input$year == "2015") {
return (table2015 %>% filter(Borough == "Staten Island"))
} else if (input$year == "2016") {
return (table2016 %>% filter(Borough == "Staten Island"))
} else if (input$year == "2017") {
return (table2017 %>% filter(Borough == "Staten Island"))
} else if (input$year == "2018") {
return (table2018 %>% filter(Borough == "Staten Island"))
} else if (input$year == "2019") {
return (table2019 %>% filter(Borough == "Staten Island"))
} else if (input$year == "2020") {
return (table2020 %>% filter(Borough == "Staten Island"))
} else if (input$year == "2021") {
return (table2021 %>% filter(Borough == "Staten Island"))
}
} else {
if (input$year == "2014") {
return (table2014 %>% filter(Borough == "Queens"))
} else if (input$year == "2015") {
return (table2015 %>% filter(Borough == "Queens"))
} else if (input$year == "2016") {
return (table2016 %>% filter(Borough == "Queens"))
} else if (input$year == "2017") {
return (table2017 %>% filter(Borough == "Queens"))
} else if (input$year == "2018") {
return (table2018 %>% filter(Borough == "Queens"))
} else if (input$year == "2019") {
return (table2019 %>% filter(Borough == "Queens"))
} else if (input$year == "2020") {
return (table2020 %>% filter(Borough == "Queens"))
} else if (input$year == "2021") {
return (table2021 %>% filter(Borough == "Queens"))
}
}
})
chiDat <- reactive({
if (input$year == "2014") {
return (data2014)
} else if (input$year == "2015") {
return (data2015)
} else if (input$year == "2016") {
return (data2016)
} else if (input$year == "2017") {
return (data2017)
} else if (input$year == "2018") {
return (data2018)
} else if (input$year == "2019") {
return (data2019)
} else if (input$year == "2020") {
return (data2020)
} else if (input$year == "2021") {
return (data2021)
}
})
observe({
breeds <- unique(chiDat()$BreedName)
updateSelectInput(session, "breeds", choices = breeds)
})
output$newyorkcity <- renderPlot({
ggmap(nyc) +
geom_point(data = newyorkcity(), aes(x = lon, y = lat, color = Borough),
alpha = 0.5)
})
output$borough <- renderPlot({
if (input$type == "Raw") {
ggplot(borough(), aes(x = Borough)) +
geom_bar()
} else {
countBorough <- table(borough()$Borough)
boroughProp <- prop.table(countBorough)
df <- data.frame(Borough = names(boroughProp), Proportion = boroughProp)
ggplot(df, aes(x = Borough, y = Proportion.Freq)) +
geom_bar(stat = "identity") +
ylab("Proportion")
}
})
output$popular <- renderPlot({
if (input$data_type == "Raw") {
ggplot(popular(), aes(x = BreedName, y = n)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
ylab("Frequency")
} else {
ggplot(popular(), aes(x = BreedName, y = n/sum(n))) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
ylab("Proportion")
}
})
observeEvent(input$chi, {
tableau <- table(chiDat()$BreedName == input$breeds, chiDat()$Borough)
result <- chisq.test(tableau)
output$chiResult <- renderText({
paste0("Chi-Squared Test Result:\n\n",
"Observed values:\n", format(tableau, scientific = FALSE), "\n\n",
"Expected values:\n", format(result$expected, scientific = FALSE), "\n\n",
"Test statistic: ", round(result$statistic, 2), "\n",
"Degrees of freedom: ", result$parameter, "\n",
"p-value: ", format(result$p.value, scientific = TRUE, digits = 3), "\n\n")
})
})
}
shinyApp(ui, server)
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='wz225', token='0457A49B4B4F3AB097735F28C2449CA7', secret='ZWBUGIWIz+CGcausgu1EkDDWUOBfRMuJkGN3JpwT')
setwd("~/stsci4100/STSCI 4100")
rsconnect::deployApp(appName = "Dog Licensing")
library(shiny); runApp('~/stsci4100/STSCI 4100/Dog Shiny App - wz225.R')
library(shiny); runApp('~/stsci4100/STSCI 4100/Dog Shiny App - wz225.R')
library(shiny); runApp('Communities.R')
